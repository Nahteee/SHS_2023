employee = as.numeric(nlevels(factor(pfda$Employee_ID)))
#NAME : HANAON YIP KIN MING
#TP NUMBER : TP061518
#READ FILE
pfda = read.csv("C:\\Users\\User\\Desktop\\Programming For Data Analysis\\assignment\\employee_attrition.csv",header=TRUE)
pfda
#LIST AND RENAME FILE
names(pfda)
names(pfda)=c("Employee_ID","Record_Date","BirthDate","OrigHireDate","TerminationDate","Age","LengthofService","CityName","DepartmentName",
"JobTitle","StoreName","Gender_Short","Gender_Full","Termreason","Termtype","Status_Year","Status","Business_Unit")
names(pfda)
#QUESTION 1 - Retirement
#Gender ratio
Male = nrow(pfda[pfda$Gender_Full=="Male",])
Male
Female = nrow(pfda[pfda$Gender_Full=="Female",])
Female
#HOW MANY EMPLOYEE VOLUNTARILY RETIRED
voluntary = nrow(pfda[pfda$Termtype=="Voluntary",])
voluntary
#HOW MANY EMPLOYEE INVOLUNTARILY RETIRED
involuntary = nrow(pfda[pfda$Termtype=="Involuntary",])
involuntary
# Male voluntarily and involuntarily retired
mvol = nrow(pfda[pfda$Termtype=="Voluntary"&pfda$Gender_Full=="Male",])
mvol
minvol = nrow(pfda[pfda$Termtype=="Involuntary"&pfda$Gender_Full=="Male",])
minvol
#Female voluntarily and involuntarily retired
fvol = nrow(pfda[pfda$Termtype=="Voluntary"&pfda$Gender_Full=="Female",])
fvol
finvol = nrow(pfda[pfda$Termtype=="Involuntary"&pfda$Gender_Full=="Female",])
finvol
#Summary of termination type
terminationtype = factor(pfda$Termtype)
summary(terminationtype)
#Summary of termination reason
terminationreason = factor(pfda$Termreason)
summary(terminationreason)
#Highest reason employee being terminated
reason = factor(pfda$Termreason)
reason = names(sort(summary(reason),decreasing=T)[2:4])
reason
#What is the average age employees retired voluntarily
age=factor(pfda[pfda$Termreason=="Retirement" & pfda$Termtype=="Voluntary",]$Age)
age
average_age = round(mean(as.numeric(as.character(age)),digits=2))
average_age
#What is the average length of service of those retired employee
lengthofservice = factor(pfda[pfda$Termreason=="Retirement",]$LengthofService)
lengthofservice
average_length = round(mean(as.numeric(as.character(lengthofservice)),digits=2))
average_length
#The maximum length of service and minimum length of service of retired employee
maxlength = max(as.numeric(as.character(lengthofservice)))
maxlength
minlength = min(as.numeric(as.character(lengthofservice)))
minlength
#The number of current active employee
active = nrow(pfda[pfda$Status=="ACTIVE",])
active
#The average age of current active employee
active_age = factor(pfda[pfda$Status=="ACTIVE",]$Age)
active_age
average_active = round(mean(as.numeric(as.character(active_age))),digits=2)
average_active
# Average age of current active employee and average age of retired employee
average_age_to_retired = average_age-average_active
average_age_to_retired
#The rate of retirement
employee = as.numeric(nlevels(factor(pfda$Employee_ID)))
employee
volunteer = nrow(pfda[pfda$Termreason=="Retirement" & pfda$Termtype=="Voluntary",])
volunteer
rate = round(as.numeric(volunteer)/as.numeric(employee),digits=2)
rate
#The rate of retirement in headoffice
headoffice = nrow(pfda[pfda$Business_Unit=="HEADOFFICE",])
headoffice
activehead  = nrow(pfda[pfda$Business_Unit=="HEADOFFICE"&pfda$Status=="ACTIVE",])
activehead
retirehead = nrow(pfda[pfda$Business_Unit=="HEADOFFICE"&pfda$Status=="TERMINATED",])
retirehead
head_rate = round((as.numeric(retirehead))/(as.numeric(headoffice)),digits=2)
head_rate
#The rate of retirement in stores
office = nrow(pfda[pfda$Business_Unit=="STORES",])
office
activeoffice = nrow(pfda[pfda$Business_Unit=="STORES"&pfda$Status=="ACTIVE",])
activeoffice
retireoffice = nrow(pfda[pfda$Business_Unit=="STORES"&pfda$Status=="TERMINATED",])
retireoffice
office_rate = round((as.numeric(retireoffice))/(as.numeric(office)),digits=2)
office_rate
#Prediction of the retirement of employee in the upcoming 5 years
latest = factor(pfda[pfda$Status_Year=="2015"&pfda$Status=="ACTIVE",]$Age)
working = as.vector(latest)
Year1=0
Year2=0
Year3=0
Year4=0
Year5=0
for (i in working)
{
if((as.numeric(i)+1)>=average_age)
{
Year1 = Year1+1
}else if ((as.numeric(i)+2)>=average_age)
{
Year2 = Year2+1
}else if ((as.numeric(i)+3)>=average_age)
{
Year3 = Year3+1
}else if ((as.numeric(i)+4)>=average_age)
{
Year4 = Year4+1
}else if ((as.numeric(i)+5)>=average_age)
{
Year5 = Year5+1
}
}
Year = c(Year1,Year2,Year3,Year4,Year5)
Year
next5= c("2016","2017","2018","2019","2020")
# Question 2
# Reason behind employee resignation and which department do they belong
#
employee = as.numeric(nlevels(factor(pfda$Employee_ID)))
employee
volunteer = nrow(pfda[pfda$Termreason=="Retirement" & pfda$Termtype=="Voluntary",])
volunteer
rate = round(as.numeric(volunteer)/as.numeric(employee),digits=2)
rate
resignation = summary(factor(pfda[pfda$Termreason=="Resignation",]$Termreason))
resignation
resignation = factor(pfda$Termreason=="Resignation",)
summary(resignation)
resignation = summary(factor(pfda[pfda$Termreason=="Resignation",]$Termreason))
resignation
resignation = nrow(pfda[pfda$Termreason=="Resignation",])
resignation
resignation = nrow(pfda[pfda$Termreason=="Resignaton",])
resignation
resign = summary(factor(pfda[pfda$Termreason=="Resignaton",]$Termreason))
#resignation = nrow(pfda[pfda$Termreason=="Resignaton",])
resign
# The percentage of resignation
resignrate = resign/employee
resignrate
resignrate = round((as.numeric(resign))/(as.numeric(employee)),digits=2)
resignrate
resignage = factor(pfda[pfda$Termreason=="Resignaton",]$Age)
averageresign = round(mean(as.numeric(as.character(resignage)),digits=2))
averageresign
highestresign = max(as.vector(resignage))
lowestresign = min(as.vector(resignage))
highestresign
lowestresign
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr"), dependencies = TRUE
install.packages("dplyr")
install.packages("dplyr")?
library(dplyr)
install.packages("tidyverse")
library(tidyverse)
install.packages("dplyr")
install.packages("dbplyr")
install.packages("dplyr", dependencies = TRUE)
install.packages("tidyverse", dependencies = TRUE)
library(tidyverse)
install.packages(c("tidyverse", "dbplyr"))
install.packages("tidyverse", dependencies = TRUE)
install.packages("tidyverse")
load library (tidyverse)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
# Create one csv file
# Create one csv file
# Create one csv file
# Create one csv file
install.packages("dplyr")
